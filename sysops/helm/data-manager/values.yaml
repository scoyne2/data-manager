# Default values for data-manager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

domainName: ""

resourceBucketName: ""

hostedZoneId: ""

awsRegion: ""

certificateARN: ""

wafARN: ""

# https://github.com/aws/eks-charts/tree/master/stable/aws-load-balancer-controller
aws-load-balancer-controller:
  clusterName: data-manager-eks
  serviceAccount:
    create: false
    name: aws-load-balancer-controller

api:
  serviceName: api
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  replicaCount: 1
  env:
    postgres_user: ""
    postgres_password: ""
    postgres_port: "5432"
    postgres_host: data-manager-postgresql
    postgres_db_name: postgres
  image:
    repository: ""
    pullPolicy: Always
    tag: "latest"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

frontend:
  serviceName: frontend
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  replicaCount: 1
  image:
    repository: ""
    pullPolicy: Always
    tag: "latest"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80

# https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
postgresql:
  volumePermissions:
    enabled: true

  image:
    debug: true

  auth:
    postgresPassword: ""
    username: "admin"
    password: ""
    database: "postgres"

  primary:
    persistence:
      enabled: true # TODO set to true, use EBS
      #existingClaim: postgres-pvc
    initdb:
      user: "admin"
      password: ""
      scripts:
        db-init.sql: |
          CREATE TABLE feeds (
              id serial PRIMARY KEY,
              vendor TEXT,
              feed_name TEXT,
              feed_method TEXT);
          INSERT INTO feeds (vendor, feed_name, feed_method)
          VALUES ('Coyne Enterprises', 'Orders', 'SFTP'),
          ('The Mochi Dog Board', 'Dog Breeds', 'S3');
          CREATE TABLE feed_status (
              id serial PRIMARY KEY,
              feed_id INTEGER REFERENCES feeds (id),
              process_date TEXT,
              record_count INTEGER,
              error_count INTEGER,
              feed_status TEXT,
              file_name TEXT,
              emr_application_id TEXT,
              emr_step_id TEXT,
              is_current BOOLEAN);
          INSERT INTO feed_status (feed_id, process_date, record_count, error_count, feed_status, file_name, is_current)
          VALUES (1, '2021-03-31 22:30:20', 1958623, 0, 'Success', 'fake_file.txt', '1', '1', True),
                 (1, '2017-03-31 14:30:20', 2389635, 61, 'Errors', 'fake_file2.txt', '1', '1', False),
                 (2, '2022-03-31 08:30:20', 0, 500, 'Failed', 'fake_file3.txt', '1', '1', False),
                 (2, '2022-03-30 06:21:20', 0, 500, 'Failed', 'fake_filebad.txt', '1', '1', False),
                 (2, '2022-03-31 11:30:20', 13076, 0, 'Success', 'fake_file4.csv', '1', '1', True);

# https://github.com/rowanruseler/helm-charts/blob/master/charts/pgadmin4/values.yaml
pgadmin4:
  persistentVolume:
    enabled: false
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  ingress:
    enabled: true
    ingressClassName: "alb"
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      ingressclass.kubernetes.io/is-default-class: "true"
      external-dns.alpha.kubernetes.io/hostname: ""
      alb.ingress.kubernetes.io/success-codes: 200,201,308,302
    hosts:
      - host: "pgadmin4.datamanagertool.com"
        paths:
          - path: /
            pathType: Prefix
  env:
    email: ""
    password: ""
  serverDefinitions:
    enabled: true
    servers:
     dataManagerServer:
       Name: "Data Manager Postgres Server"
       Group: "Servers"
       Port: 5432
       Username: ""
       Host: "data-manager-postgresql"
       SSLMode: "disable"
       MaintenanceDB: "postgres"

